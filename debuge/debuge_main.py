# coding=utf-8
from debuge.debuge_source import debug
"""
########################################################################################################################
这是一个关于PyCharm的debug断点调试功能的测试（分析理解功能）
########################################################################################################################
这个测试主要分为两个python文件，一个是当前的debuge_main.py文件，还有一个是debuge_source.py文件。在debuge_source.py中的第10行info()函数的
调用已经打了一个断点。
函数的运行分析：
点击调试后，程序会从此文件从上而小逐行执行，先：from debuge.debuge_source import debug导入debuge_source.py中的debuge方法（函数），之所以
能够导入这个函数是因为他们同在一个文件夹下，如果不是在同一个文件夹下，可以在这两个文件同时所在的文件夹下新建一个：init.py文件，这样程序就会将整个文件
夹作为一个模块，就可以导入了模块了；接着会执行：
one=1
if __name__=="__main__":
    two=2
    main()
在执行main()时，会由main()的定义去执性debug()，接着执行info()，执行info()时由于有断点，所以会直接在这里停下，让我们选择接下来的调试步骤，可以进
入函数，也可以直接跳过，或者逐行执行，主要看你想怎么检查错误，点击调试器中的按钮来分析了解按钮的功能与意义。
"""
def main():
    debug()
one=1
if __name__=="__main__":
    two=2
    main()
